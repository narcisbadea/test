{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    constructor(router) {\n      this.router = router; // TODO: Change menu items\n\n      this.main = [];\n      this.components = [{\n        displayName: 'Dashboard',\n        iconName: 'dashboard',\n        route: '/dashboard'\n      }, {\n        displayName: 'Approve Items',\n        iconName: 'assignment_turned_in',\n        route: '/approve-items'\n      }, {\n        displayName: 'My Items',\n        iconName: 'inbox',\n        route: '/my-items'\n      }];\n      this.settings = [{\n        displayName: 'User Management',\n        iconName: 'people',\n        route: '/users'\n      }];\n      this.currentUrl = new BehaviorSubject('');\n      this.router.events.subscribe(event => {\n        this.findMenuItem(event);\n        setTimeout(() => {\n          this.findMenuItem(event);\n        }, 1000);\n\n        if (event instanceof NavigationEnd) {\n          this.currentUrl.next(event.urlAfterRedirects);\n        }\n      });\n    }\n\n    findMenuItem(event) {\n      let menuItem = [];\n      const temp1 = this.main.filter(i => i.route === event.url);\n      const temp2 = this.components.filter(i => i.route === event.url);\n      const temp3 = this.settings.filter(i => i.route === event.url);\n\n      if (temp1.length > 0) {\n        menuItem = temp1;\n      } else if (temp2.length > 0) {\n        menuItem = temp2;\n      } else if (temp3.length > 0) {\n        menuItem = temp3;\n      } else {\n        return;\n      }\n\n      if (menuItem[0].disabled) {\n        this.router.navigate(['/']);\n      }\n    }\n\n  }\n\n  MenuService.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(i1.Router));\n  };\n\n  MenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: 'root'\n  });\n  return MenuService;\n})();","map":null,"metadata":{},"sourceType":"module"}